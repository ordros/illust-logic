{"version":3,"sources":["utils/createStringFromHint.js","utils/getHintsFromString.js","reducers/pixelTableReducer.js","components/Pixel/index.jsx","components/Table/index.jsx","components/PixelTable/index.jsx","utils/createHintsFromBoard.js","components/EditQuestionPage/index.jsx","components/SolveQuestionPage/index.jsx","components/StaticRoutePage/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["createStringFromHint","hint","text","encodeURI","JSON","stringify","flat","map","v","buf","Buffer","from","zlib","deflateRawSync","toString","getHintFromString","strHint","size","deflated","inflated","inflateRawSync","hintFlatted","parse","decodeURI","hints","i","start","Math","ceil","end","push","slice","getHintsFromString","str","arr","split","sizeX","parseInt","sizeY","hintsX","hintsY","initialState","table","x","y","xStatus","yStatus","mode","pixelTableReducer","state","action","type","payload","Array","length","position","cellState","newTable","xHints","yHints","concat","xHintStatus","yHintStatus","Wrapper","styled","div","BlackCell","WhiteCell","CheckedCell","Pixel","status","onClickPixel","dispatch","useDispatch","onClick","onMouseEnter","e","buttons","getCell","Cell","StyledTable","FrameBorder","props","isMatched","Index","th","Spacer","Table","getIndexArray","s","_","index","array","xHintMaxLength","reduce","a","b","max","yHintMaxLength","maxHintsLength","cellSpacing","yHintX","as","yHinty","xHintx","PixelTable","createHintFromLine","line","cnt","c","forEach","pop","createHintsFromBoard","yLines","Message","EditQuestionPage","fromStaticPage","useSelector","useState","questionUrl","setQuestionUrl","setInitalData","useEffect","xStringHint","yStringHint","hintString","createStringHints","onChange","isNaN","numSize","setTableSize","target","value","href","p","SolveQuestionPage","location","useLocation","solved","setSolved","deepEqual","arr1","arr2","j","createHintStatus","currentHints","hintStatus","search","querystring","current","checkHintStatus","checkSolved","StaticRoutePage","setType","indexOf","App","store","createStore","className","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.66c6035d.chunk.js","sourcesContent":["import zlib from 'zlib';\r\n\r\nconst createStringFromHint = (hint) => {\r\n  const text = encodeURI(JSON.stringify(hint.flat().map((v) => !v ? 0 : v)));\r\n  const buf = Buffer.from(text);\r\n  const deflated = zlib.deflateRawSync(buf);\r\n  const base64string = deflated.toString('base64');\r\n  return base64string;\r\n};\r\n\r\nexport default createStringFromHint;\r\n","import zlib from 'zlib';\r\n\r\nconst getHintFromString = (strHint, size) => {\r\n  const deflated = Buffer.from(strHint, 'base64');\r\n  const inflated = zlib.inflateRawSync(deflated).toString();\r\n  const hintFlatted = JSON.parse(decodeURI(inflated)).map((v) => v === 0 ? null : v);\r\n\r\n  const hints = [];\r\n  for (let i = 0; i < size; i++) {\r\n    const start = Math.ceil(size / 2) * i;\r\n    const end = Math.ceil(size / 2) * (i + 1);\r\n    hints.push(hintFlatted.slice(start, end));\r\n  }\r\n  return hints;\r\n}\r\n\r\nconst getHintsFromString = (str) => {\r\n  const arr = str.split('_');\r\n  const sizeX = parseInt(arr[0]);\r\n  const sizeY = parseInt(arr[1]);\r\n  const hintsX = getHintFromString(arr[2], sizeX);\r\n  const hintsY = getHintFromString(arr[3], sizeY);\r\n  \r\n  return {\r\n    sizeX,\r\n    sizeY,\r\n    hintsX,\r\n    hintsY,\r\n  };\r\n};\r\n\r\nexport default getHintsFromString;","const initialState = {\r\n  size: null,\r\n  table: null,\r\n  hints: { x: null, y: null, xStatus: null, yStatus: null },\r\n  mode: 'create',\r\n};\r\n\r\nconst pixelTableReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'INIT': {\r\n      const { size: { x, y } } = action.payload;\r\n      return {\r\n        size: { x, y },\r\n        table: Array.from({length: x}).map((v) => Array.from({length: y}).map(() => 'white')),\r\n        mode: 'create',\r\n      };\r\n    }\r\n    case 'SET_PIXEL': {\r\n      const { position: { x, y }, cellState } = action.payload;\r\n      const newTable = state.table;\r\n      newTable[x][y] = cellState;\r\n      return { ...state, table: newTable };\r\n    }\r\n    case 'SET_HINTS': {\r\n      const { xHints, yHints } = action.payload;\r\n      return {\r\n        ...state,\r\n        hints: {\r\n          ...state.hints,\r\n          x: xHints.map((hint) => (hint || []).concat(Array.from({length: Math.ceil(state.size.y / 2) - (hint ? hint.length : 0) }))),\r\n          y: yHints.map((hint) => (hint || []).concat(Array.from({length: Math.ceil(state.size.x / 2) - (hint ? hint.length : 0) }))),\r\n        },\r\n      };\r\n    }\r\n    case 'SET_HINTS_STATUS': {\r\n      const { xHintStatus, yHintStatus } = action.payload;\r\n      return {\r\n        ...state,\r\n        hints: {\r\n          ...state.hints,\r\n          xStatus: xHintStatus,\r\n          yStatus: yHintStatus,\r\n        },\r\n      }\r\n    }\r\n    case 'SET_MODE': {\r\n      const { mode } = action.payload;\r\n      return {\r\n        ...state,\r\n        mode,\r\n      }\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default pixelTableReducer;","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport styled from 'styled-components';\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 100%;\r\n  height: 100%;\r\n  border: 1px solid black;\r\n`;\r\n\r\nconst BlackCell = styled.div`\r\n  background: black;\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nconst WhiteCell = styled.div`\r\n  background: white;\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nconst CheckedCell = styled.div`\r\n  background: white;\r\n  background-image: linear-gradient(-45deg,\r\n    transparent 48%,\r\n    black 48%,\r\n    black 52%,\r\n    transparent 52%, \r\n    transparent),\r\n  linear-gradient(45deg, /*角度*/\r\n    transparent 48%,\r\n    black 48%, /*斜線の色*/\r\n    black 52%, /*斜線の色*/\r\n    transparent 52%, \r\n    transparent);\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nconst Pixel = ({ status, x, y, mode, onClickPixel }) => {\r\n  const dispatch = useDispatch();\r\n  const onClick = () => {\r\n    let cellState = '';\r\n    switch(status) {\r\n      case 'white':\r\n        cellState = 'black';\r\n        break;\r\n      case 'black':\r\n        if (mode === 'solve') {\r\n          cellState = 'checked';\r\n        } else {\r\n          cellState = 'white';\r\n        }\r\n        break;\r\n      case 'checked':\r\n      default:\r\n        cellState = 'white';\r\n    }\r\n    dispatch({ type: \"SET_PIXEL\", payload: { position:{ x, y }, cellState } });\r\n    \r\n    onClickPixel();\r\n  };\r\n  const onMouseHover = (e) => {\r\n    // hover時に左クリックしていないなら何もしない\r\n    if (e.buttons !== 1 ) {\r\n      return;\r\n    }\r\n    dispatch({ type: \"SET_PIXEL\", payload: { position:{ x, y }, cellState: 'black'} });\r\n    \r\n    onClickPixel();\r\n    return;\r\n  };\r\n\r\n  const getCell = (status) => {\r\n    switch(status) {\r\n      case 'white':\r\n        return <WhiteCell />;\r\n      case 'black':\r\n        return <BlackCell />;\r\n      case 'checked':\r\n      default:\r\n        return <CheckedCell />;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Wrapper onClick={onClick} onMouseEnter={onMouseHover}>\r\n      {getCell(status)}\r\n    </Wrapper>\r\n  );\r\n  \r\n};\r\n\r\nexport default Pixel;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport Pixel from '../Pixel';\r\n\r\nconst Cell = styled.div`\r\n  width: 40px;\r\n  height: 40px;\r\n  border-collapse: collapse;\r\n  font-size: 20px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background: #999;\r\n`;\r\n\r\nconst StyledTable = styled.table`\r\n  width: 50px;\r\n  height: 50px;\r\n  \r\n  border-spacing: 0;\r\n  border-collapse: collapse;\r\n  td {\r\n   padding: 0;\r\n   margin: 0;\r\n  }\r\n`;\r\n\r\nconst FrameBorder = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border: 1px solid black;\r\n  ${(props) => props.isMatched ? 'background: #ffa500' : ''}; \r\n  border-collapse: collapse;\r\n`;\r\n\r\nconst Index = styled.th`\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst Spacer = styled.div`\r\n  width: 20px;\r\n  height: 20px;\r\n`;\r\n\r\nconst Table = ({size, table, xHints, yHints, hints, mode, onClickPixel}) => {\r\n  const getIndexArray = (s) => s ? Array.from({length: s}, (_, index) => index) : [];\r\n  const array = getIndexArray(size);\r\n  \r\n  const xHintMaxLength = xHints && xHints.reduce((a,b) => Math.max(a.length || a, b.length || b));\r\n  const yHintMaxLength = yHints && yHints.reduce((a,b) => Math.max(a.length || a, b.length || b));\r\n  const maxHintsLength = Math.max(xHintMaxLength, yHintMaxLength);\r\n\r\n  const xHintStatus = hints.xStatus;\r\n  const yHintStatus = hints.yStatus;\r\n\r\n  return (\r\n    <StyledTable cellSpacing='0'>\r\n      <thead>\r\n        <tr>\r\n          <Index><Spacer/></Index>\r\n          {getIndexArray(xHintMaxLength).map((v) => <th key={v}></th>)}\r\n          {array.map((v) => <Index key={v}>{v}</Index>)}\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n       {\r\n          getIndexArray(maxHintsLength).map((yHintX) => {\r\n            return (\r\n              <tr key={yHintX}>\r\n                <Index as=\"td\" />\r\n                {getIndexArray(xHintMaxLength).map((v) => <td key={v}>{<Cell><FrameBorder /></Cell> }</td>)}\r\n                {getIndexArray(size).map((yHinty) => <td key={yHinty}><Cell><FrameBorder isMatched={yHintStatus && yHintStatus[yHinty][yHintX]}>{yHints[yHinty][yHintX] || ''}</FrameBorder></Cell></td>)}\r\n              </tr>\r\n            );\r\n          })\r\n        }\r\n        {array.map((x) => {\r\n          return (\r\n            <tr key={x}>\r\n              <Index as=\"td\" key={x}>{x}</Index>\r\n              {\r\n                getIndexArray(xHintMaxLength).map((xHintx) => {\r\n                  return (\r\n                    <td key={xHintx}>\r\n                      <Cell><FrameBorder isMatched={xHintStatus && xHintStatus[x][xHintx]}>{xHints[x][xHintx] || ''}</FrameBorder></Cell>\r\n                    </td>\r\n                  );\r\n                })\r\n              }\r\n              {array.map((y) => {\r\n                return (\r\n                  <td key={y}>\r\n                    <Cell>\r\n                      <Pixel x={x} y={y} status={table && table[x][y]} onClickPixel={onClickPixel} mode={mode}/>\r\n                    </Cell>\r\n                  </td>\r\n                );\r\n              })}\r\n            </tr>\r\n          )\r\n        })}\r\n      </tbody>\r\n    </StyledTable>\r\n  )\r\n};\r\n\r\nexport default Table;","import styled from \"styled-components\";\r\nimport Table from \"../Table\";\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  padding: 40px;\r\n`;\r\n\r\nconst PixelTable = ({ size, table, hints, mode, onClickPixel }) => {\r\n  return (\r\n    <Wrapper>\r\n      {table && hints && (\r\n        <>\r\n          <Table size={size.x} table={table} xHints={hints.x} yHints={hints.y} hints={hints} mode={mode} onClickPixel={onClickPixel}/>\r\n        </>\r\n      )}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default PixelTable;\r\n","const createHintFromLine = (line) => {\r\n  const hints = [];\r\n  let cnt = 0;\r\n  line.push(\"padding\");\r\n  line.map((c) => c === 'black' ? \"1\" : \"0\").forEach((c, index) => {\r\n    if (c === \"1\") {\r\n      cnt++;\r\n    } else {\r\n      if (cnt > 0) {\r\n        hints.push(cnt);  \r\n        cnt = 0;\r\n      }\r\n    }\r\n  });\r\n  line.pop();\r\n  return hints.concat(Array.from({length: (line.length/2) - hints.length}));\r\n};\r\n\r\nconst createHintsFromBoard = (table) => {\r\n  if (!table) {\r\n    return { xHints: null, yHints: null };\r\n  }\r\n\r\n  const yLines = []; \r\n  for (let y = 0; y < table[0].length; y++) {\r\n    const line = Array.from({length: table.length}).map((_, index) => index)\r\n      .map((x) => table[x][y])\r\n    yLines.push(line);\r\n  }\r\n  return {\r\n    xHints: table.map((line) => createHintFromLine(line)),\r\n    yHints: yLines.map((line) => createHintFromLine(line)),\r\n  };\r\n};\r\n\r\nexport default createHintsFromBoard;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport createHintsFromBoard from \"../../utils/createHintsFromBoard\";\r\nimport createStringFromHint from \"../../utils/createStringFromHint\";\r\nimport PixelTable from \"../PixelTable\";\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst Message = styled.div`\r\n  display: flex;\r\n`\r\n\r\nconst EditQuestionPage = ({ fromStaticPage = false }) => {\r\n  const { size, table, hints } = useSelector((state) => state);\r\n  const dispatch = useDispatch();\r\n\r\n  const [questionUrl, setQuestionUrl] = useState('');\r\n\r\n  const setInitalData = () => {\r\n    const initSize = 10;\r\n    dispatch({ type: \"INIT\", payload: { size: { x: initSize, y: initSize }}});\r\n    dispatch({ type: 'SET_HINTS', payload: { xHints: Array.from({length: initSize}), yHints: Array.from({length: initSize}) } });\r\n    dispatch({ type: 'SET_MODE', payload: { mode: 'create' }});\r\n  }\r\n\r\n  const createStringHints = () => {\r\n    const xStringHint = createStringFromHint(hints.x);\r\n    const yStringHint = createStringFromHint(hints.y);\r\n    const hintString = `${size.x}_${size.y}_${xStringHint}_${yStringHint}`;\r\n    if (fromStaticPage) {\r\n      setQuestionUrl(`?type=solve&hint=${hintString}`);\r\n    } else {\r\n      setQuestionUrl(`/solve?type=solve&hint=${hintString}`);\r\n    }\r\n  };\r\n\r\n  const setTableSize = (size) => {\r\n    if (!isNaN(size)) {\r\n      const numSize = parseInt(size);\r\n      if (numSize > 0 && numSize <= 20) {\r\n        dispatch({ type: 'INIT', payload: { size: { x: numSize, y: numSize }}});\r\n        dispatch({ type: 'SET_HINTS', payload: { xHints: Array.from({length: numSize}), yHints: Array.from({length: numSize}) } }); \r\n      }\r\n    }\r\n  };\r\n  \r\n  const createHints = () => {\r\n    const { xHints, yHints } = createHintsFromBoard(table);\r\n    dispatch({ type: 'SET_HINTS', payload: { xHints, yHints } })\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!table) {\r\n      setInitalData();\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (hints && hints.x && hints.y) {\r\n      createStringHints();\r\n    }\r\n  }, [hints]);\r\n\r\n  return (\r\n    <Wrapper>\r\n      <PixelTable size={size} table={table} hints={hints} mode='create' onClickPixel={createHints}/>\r\n      <Message>\r\n        table size(max size is 20): <input type=\"text\" onChange={(e) => setTableSize(e.target.value)} max={30}/>\r\n      </Message>\r\n      <Message>\r\n        Let's solve: <a href={questionUrl} target=\"_blank\">{questionUrl && 'here'}</a>\r\n      </Message>\r\n      <button onClick={setInitalData}>Reset!</button>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default EditQuestionPage;","import { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useLocation } from \"react-router\";\r\nimport styled from \"styled-components\";\r\nimport createHintsFromBoard from \"../../utils/createHintsFromBoard\";\r\nimport getHintsFromString from \"../../utils/getHintsFromString\";\r\nimport PixelTable from \"../PixelTable\";\r\nimport querystring from 'querystring';\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst Message = styled.p`\r\n  font-size: 40px;\r\n  font-weight: bold;\r\n  color: red;\r\n`;\r\n\r\nconst SolveQuestionPage = () => {\r\n  const { size, table, hints } = useSelector((state) => state);\r\n  const dispatch = useDispatch();\r\n  const location = useLocation();\r\n\r\n  const [solved, setSolved] = useState(false);\r\n  const [hintValue, setHintValue] = useState(null);\r\n\r\n  const setInitalData = () => {\r\n    const initSize = 10;\r\n    dispatch({ type: 'SET_MODE', payload: { mode: 'solve' }});\r\n    if (!location.search) {\r\n      dispatch({ type: \"INIT\", payload: { size: { x: initSize, y: initSize }}});\r\n      dispatch({ type: 'SET_HINTS', payload: { xHints: Array.from({length: initSize}), yHints: Array.from({length: initSize}) } });\r\n      return;\r\n    }\r\n    const hint = querystring.parse(location.search).hint;\r\n    if (!hint) {\r\n      return;\r\n    }\r\n    const {\r\n      sizeX,\r\n      sizeY,\r\n      hintsX,\r\n      hintsY,\r\n    } = getHintsFromString(hint);\r\n\r\n    dispatch({ type: \"INIT\", payload: { size: { x: sizeX, y: sizeY }}});\r\n    dispatch({ type: 'SET_HINTS', payload: { xHints: hintsX, yHints: hintsY } });\r\n  }\r\n\r\n  const deepEqual = (arr1, arr2) => {\r\n    for (let i = 0; i < arr1.length; i++) {\r\n      for (let j = 0; j < arr1[0].length; j++) {\r\n        if (arr1[i][j] != arr2[i][j]) {\r\n          return false;\r\n        }\r\n      }\r\n    }\r\n    return true;\r\n  };\r\n \r\n  const createHintStatus = (hints, currentHints) => {\r\n    const hintStatus = [];\r\n    for (let i = 0; i < hints.length; i++) {\r\n      const line = [];\r\n      for (let j = 0; j < hints[0].length; j++) {\r\n        line.push(hints[i][j] === currentHints[i][j]);\r\n      }\r\n      hintStatus.push(line);\r\n    }\r\n    return hintStatus;\r\n  };\r\n\r\n  const checkSolved = () => {\r\n    const current = createHintsFromBoard(table);\r\n    \r\n    if(deepEqual(current.xHints, hints.x) && deepEqual(current.yHints, hints.y)) {\r\n      setSolved(true);\r\n    } else {\r\n      setSolved(false);\r\n    }\r\n  }\r\n\r\n  const checkHintStatus = () => {\r\n    const current = createHintsFromBoard(table);\r\n    const xHintStatus = createHintStatus(hints.x, current.xHints);\r\n    const yHintStatus = createHintStatus(hints.y, current.yHints);\r\n\r\n    dispatch({ type: 'SET_HINTS_STATUS', payload: { xHintStatus, yHintStatus }});\r\n  };\r\n\r\n  const onChangeHint = (e) => {\r\n    if (!e.target.value) {\r\n      return;\r\n    }\r\n    setHintValue(e.target.value);\r\n  };\r\n\r\n  const onClickPixel = () => {\r\n    checkHintStatus();\r\n    checkSolved();\r\n  };\r\n\r\n  const onSetHint = () => {\r\n    const {\r\n      sizeX,\r\n      sizeY,\r\n      hintsX,\r\n      hintsY,\r\n    } = getHintsFromString(hintValue);\r\n\r\n    dispatch({ type: \"INIT\", payload: { size: { x: sizeX, y: sizeY }}});\r\n    dispatch({ type: 'SET_HINTS', payload: { xHints: hintsX, yHints: hintsY } });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setInitalData();\r\n  }, []);\r\n\r\n  return (\r\n    <Wrapper>\r\n      <PixelTable size={size} table={table} hints={hints} mode='solve' onClickPixel={onClickPixel}/>\r\n      {/* <input onChange={onChangeHint} />\r\n      <button onClick={onSetHint}>Set</button> */}\r\n      <Message>{solved && 'Solved!'}</Message>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default SolveQuestionPage;","import { useEffect, useState } from \"react\";\r\nimport { useLocation } from \"react-router\";\r\nimport EditQuestionPage from \"../EditQuestionPage\";\r\nimport SolveQuestionPage from \"../SolveQuestionPage\";\r\n\r\nconst StaticRoutePage = () => {\r\n  const location = useLocation();\r\n\r\n  const [type, setType] = useState('create');\r\n\r\n  useEffect(() => {\r\n    if (location) {\r\n      if (location.search.indexOf(\"type=solve\") > 0) {\r\n        setType('solve');\r\n      } else {\r\n        setType('create');\r\n      }\r\n    }\r\n  }, [location])\r\n\r\n  return (\r\n    <>\r\n      {type === 'solve' && <SolveQuestionPage />}\r\n      {type === 'create' && <EditQuestionPage fromStaticPage />}\r\n    </>\r\n  )\r\n};\r\n\r\nexport default StaticRoutePage;","import './App.css';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore } from 'redux'\r\nimport pixelTableReducer from './reducers/pixelTableReducer';\r\nimport PixelTable from './components/PixelTable';\r\nimport { BrowserRouter, Route } from 'react-router-dom';\r\nimport EditQuestionPage from './components/EditQuestionPage';\r\nimport SolveQuestionPage from './components/SolveQuestionPage';\r\nimport StaticRoutePage from './components/StaticRoutePage';\r\n\r\nfunction App() {\r\n  const store = createStore(pixelTableReducer);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Provider store={store}>\r\n        <BrowserRouter>\r\n          <Route path=\"/\" component={StaticRoutePage} />\r\n          <Route path=\"/create\" component={EditQuestionPage} />\r\n          <Route path=\"/solve\" component={SolveQuestionPage} />\r\n        </BrowserRouter>\r\n      </Provider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}